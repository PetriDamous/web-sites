{"version":3,"sources":["components/SiteLogo.js","components/Header.js","components/Form.js","components/Meme.js","components/MemeGenerator.js","App.js","reportWebVitals.js","index.js"],"names":["SiteLogo","class","src","alt","Header","className","Form","topText","bottomText","handleChange","handleSubmit","onSubmit","type","name","value","placeholder","onChange","id","Meme","randomImg","txtWidth","memeContainer","imgHeight","maxWidth","imgWidth","memeTxt","toFixed","console","log","style","MemeGenerator","textControl","width","document","querySelector","getBoundingClientRect","setState","roll","min","max","floatFlag","r","Math","random","floor","randomMeme","memeImgs","state","meme","length","url","height","e","preventDefault","target","fetch","then","response","json","data","memeArray","memes","this","window","addEventListener","removeEventListener","text","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f85b0e26.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction SiteLogo() {\r\n    return(\r\n        <img class=\"logo\" src=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\" alt=\"\" ></img>\r\n    )\r\n}\r\n\r\nexport default SiteLogo;","import React from 'react';\r\n\r\nimport SiteLogo from './SiteLogo'\r\n\r\nfunction Header() {\r\n    return(\r\n        <header className=\"site-header\">\r\n            <div className=\"container\">\r\n                <SiteLogo />                \r\n                <h1 className=\"site-title\">Meme-Generator</h1>\r\n            </div>\r\n            \r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction Form({topText, bottomText, handleChange, handleSubmit}) {\r\n    return(\r\n        <form className=\"form container\" onSubmit={handleSubmit}>\r\n            <input type=\"text\" name=\"topText\" value={topText} placeholder=\"Top Text\" onChange={handleChange} />\r\n            <input type=\"text\" name=\"bottomText\" value={bottomText} placeholder=\"Bottom Text\" onChange={handleChange} />\r\n            <div id=\"form-buttons-main\" class=\"form__buttons m-sm-space\">\r\n                <button className=\"btn\">Generate</button>\r\n            </div>  \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nfunction Meme({randomImg, topText, bottomText, txtWidth, imgHeight, imgWidth}) {\r\n\r\n    const memeContainer = {\r\n        maxWidth: imgWidth\r\n    }\r\n\r\n    const memeTxt = {\r\n        maxWidth: `${+(txtWidth / 2).toFixed(0)}px`\r\n    }\r\n\r\n    console.log(memeTxt.maxWidth)\r\n    return(\r\n        <div className=\"meme\">\r\n            <div style={memeContainer}  className=\"container\">\r\n                <img src={randomImg}/>\r\n\r\n                <p className=\"meme__text meme__text-top text-shadow\">{topText}</p>\r\n                <p className=\"meme__text meme__text-bottom text-shadow\">{bottomText}</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Meme;","import React, {Component} from 'react';\r\n\r\nimport Form from './Form';\r\nimport Meme from './Meme';\r\n\r\nclass MemeGenerator extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            randomImg: \"http://i.imgflip.com/1bij.jpg\",\r\n            imgHeight: 320,\r\n            imgWidth: 536,\r\n            txtWidth: 0,\r\n            memeImgs: [],\r\n            topText: \"Top Text\",\r\n            bottomText: \"Bottom Text\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const apiUrl = 'https://api.imgflip.com/get_memes';\r\n\r\n        fetch(apiUrl)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const memeArray = data.data.memes;\r\n                this.setState({\r\n                    memeImgs: memeArray                    \r\n                })\r\n            });\r\n\r\n            this.textControl();\r\n\r\n            window.addEventListener('resize', this.textControl);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.textControl);\r\n    }\r\n\r\n    textControl = () => {\r\n        const coords = document.querySelector('.meme img').getBoundingClientRect()\r\n\r\n        const width = +coords.width.toFixed(0);\r\n        // const height = +coords.height.toFixed(0);\r\n\r\n        this.setState({\r\n            txtWidth: width\r\n        });\r\n    }\r\n\r\n    roll = (min, max, floatFlag) => {\r\n        let r = Math.random() * (max - min) + min\r\n        return floatFlag ? r : Math.floor(r)\r\n    }\r\n\r\n    randomMeme = () => {\r\n        const {memeImgs} = this.state;\r\n\r\n        const meme = memeImgs[this.roll(0, memeImgs.length)];\r\n\r\n        this.setState({\r\n            randomImg: meme.url,\r\n            imgWidth: meme.width,\r\n            imgHeight: meme.height\r\n        });\r\n\r\n        // this.textControl();\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.randomMeme();\r\n        this.textControl();\r\n    }\r\n\r\n    handleChange = (e) => {        \r\n        const {name, value} = e.target;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        }, console.log(this.state))\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Form \r\n                    handleSubmit={this.handleSubmit}\r\n                    handleChange={this.handleChange}\r\n                    text={{...this.state}}\r\n                />\r\n                <Meme {...this.state}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MemeGenerator;","import React from 'react';\n\nimport './App.scss';\n\nimport Header from './components/Header';\nimport MemeGenerator from './components/MemeGenerator';\n\n// API\n// https://api.imgflip.com/get_memes\n\n// Default image\n// http://i.imgflip.com/1bij.jpg\"\n\n// Logo\n// http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MemeGenerator />\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}