{"version":3,"sources":["webpack://boilerplate/./src/js/notes.js","webpack://boilerplate/./src/js/storage.js","webpack://boilerplate/./src/js/ui.js","webpack://boilerplate/./src/app.js"],"names":["title","body","id","color","this","notes","JSON","parse","localStorage","getItem","note","getNotes","setItem","stringify","console","log","Storage","document","querySelector","innerHTML","map","join","addEventListener","UI","e","value","Notes","target","closest","parentNode"],"mappings":"iHASA,QARI,WAAYA,EAAOC,GAA2B,IAArBC,EAAqB,uDAAlB,EAAGC,EAAe,uDAAT,QAAS,UAC1CC,KAAKJ,MAAQA,EACbI,KAAKH,KAAOA,EACZG,KAAKF,GAAKA,EACVE,KAAKD,MAAQA,G,gRCiBrB,Q,0KArBI,WACI,IAAME,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UAE9C,OAAiB,OAAVJ,EAAiB,GAAKA,I,qBAGjC,SAAeK,GACX,I,EAAIL,EAAQD,KAAKO,WAEjBN,EAAQ,GAAH,O,+CAAOA,I,gkBAAP,CAAcK,IAEnBF,aAAaI,QAAQ,QAASN,KAAKO,UAAUR,M,wBAGjD,SAAkBK,GACdI,QAAQC,IAAIL,M,+MCapB,Q,6KA1BI,WACI,IAAML,EAAQW,aAEdC,SAASC,cAAc,eAAeC,UAAYd,EAAMe,KAAI,SAACV,GAAD,8CACvBA,EAAKP,MADkB,sBACCO,EAAKR,GADN,uDAE1BQ,EAAKV,MAFqB,0DAG1BU,EAAKT,KAHqB,4UAW1DoB,KAAK,M,wBAGX,c,uBAIA,e,yCCpBJJ,SAASK,iBAAiB,oBAAoB,WAC1CC,mBAGJN,SAASC,cAAc,WAAWI,iBAAiB,SAAS,SAACE,GACzD,IAAMxB,EAAQiB,SAASC,cAAc,UAAUO,MACzCxB,EAAOgB,SAASC,cAAc,SAASO,MACvCf,EAAO,IAAIgB,EAAM1B,EAAOC,GAE9Be,UAAgBN,GAEhBa,mBAGJN,SAASC,cAAc,eAAeI,iBAAiB,SAAS,SAAAE,GAC5DV,QAAQC,IAAIS,EAAEG,OAAOC,QAAQ,UAC7BL,aAAcC,EAAEG,OAAOE,WAAWA,gB","file":"bundle.js","sourcesContent":["class Notes {\r\n    constructor(title, body, id=4, color=\"white\") {\r\n        this.title = title;\r\n        this.body = body;\r\n        this.id = id;\r\n        this.color = color;\r\n    }\r\n}\r\n\r\nexport default Notes;","class Storage {\r\n    static getNotes() {\r\n        const notes = JSON.parse(localStorage.getItem('notes'));\r\n\r\n        return notes === null ? [] : notes;\r\n    }\r\n\r\n    static addNote(note) {\r\n        let notes = this.getNotes();\r\n\r\n        notes = [...notes, note];\r\n\r\n        localStorage.setItem('notes', JSON.stringify(notes));\r\n    }\r\n\r\n    static removeNote(note) {\r\n        console.log(note)\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default Storage;","import Storage from './storage';\r\n\r\nclass UI {    \r\n    static renderNotes() {\r\n        const notes = Storage.getNotes();\r\n\r\n        document.querySelector('#notes-area').innerHTML = notes.map((note) => \r\n            `<div class=\"card\" data-color=\"${note.color}\" data-id=\"${note.id}\">\r\n                <h3 class=\"card__title\">${note.title}</h3>\r\n                <div class=\"card__body\">${note.body}</div>\r\n                <div class=\"card__options\">\r\n                    <div class=\"card__color\">\r\n                        <img id=\"color\" src=\"/img/chromatic.png\" alt=\"color picker\">\r\n                    </div>\r\n                    <button id=\"delete\" class=\"btn\">Delete</button>\r\n                </div>\r\n            </div>`\r\n        ).join('');\r\n    }\r\n\r\n    static removeNote() {\r\n\r\n    }\r\n\r\n    static clearForm() {\r\n\r\n    }\r\n}\r\n\r\nexport default UI;","import Notes from './js/notes';\nimport UI from './js/ui';\nimport Storage from './js/storage';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    UI.renderNotes();\n});\n\ndocument.querySelector('#submit').addEventListener('click', (e) => {\n    const title = document.querySelector('#title').value;\n    const body = document.querySelector('#body').value;\n    const note = new Notes(title, body);\n\n    Storage.addNote(note);\n\n    UI.renderNotes();\n});\n\ndocument.querySelector('#notes-area').addEventListener('click', e => {\n    console.log(e.target.closest('.card'))\n    UI.removeNote(e.target.parentNode.parentNode);\n    // UI.renderNotes();\n});\n\n"],"sourceRoot":""}